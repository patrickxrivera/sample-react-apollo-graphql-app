type User {
  id: ID! @unique
  name: String!
  email: String! @unique
  password: String!
  memberOf: [PeerCircle!]!
  createdThreads: [Thread!]! @relation(name: "UserCreatedThread")
  participatingThreads: [Thread!]! @relation(name: "UserParticipatingThread")
}

type PeerCircle {
  id: ID! @unique
  name: String!
  description: String!
  admin: User!
  threads: [Thread!]! @relation(name: "PeerCircleThread")
}

type Thread {
  id: ID! @unique
  createdAt: DateTime!
  author: User! @relation(name: "UserCreatedThread")
  title: String!
  body: String!
  comments: [Comment!]! @relation(name: "ThreadComment")
  peerCircle: PeerCircle! @relation(name: "PeerCircleThread")
  participants: [User!]! @relation(name: "UserParticipatingThread")
}

type Comment {
  id: ID! @unique
  author: User!
  text: String!
  likes: Int!
  thread: Thread! @relation(name: "ThreadComment")
}

type AuthPayload {
  token: String
  user: User
}
